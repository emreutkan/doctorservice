openapi: 3.0.0
info:
  title: Doctor Service API
  version: 1.0.0
  description: |
    API for managing doctor authentication.

servers:
  - url: https://doctorservice-cgghevcrcrdvh5cx.canadacentral-01.azurewebsites.net/api/v1
    description: Production Server

paths:
  /auth/login:
    post:
      summary: Login as doctor
      description: Authenticates a doctor and returns a JWT token valid for 1 hour.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "emreutkan"
                password:
                  type: string
                  example: "password123"
              required:
                - username
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  role:
                    type: string
                    example: "doctor"
        '404':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid username or password"
        '500':
          description: Error logging in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error logging in"
                  error:
                    type: string
                    example: "Internal server error"

  /auth/register:
    post:
      summary: Register a new doctor
      description: Registers a new doctor in the system.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "emreutkan"
                email:
                  type: string
                  format: email
                  example: "emreutkan@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
              required:
                - username
                - email
                - password
      responses:
        '201':
          description: Doctor registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Doctor registered successfully"
                  role:
                    type: string
                    example: "doctor"
        '500':
          description: Error registering doctor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error registering doctor"
                  error:
                    type: string
                    example: "ValidationError: email already exists"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
